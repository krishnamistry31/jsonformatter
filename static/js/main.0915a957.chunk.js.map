{"version":3,"sources":["components/DataTypes/StringComponent.js","components/DataTypes/NumberComponent.js","components/DataTypes/NullComponent.js","components/DataTypes/BooleanComponent.js","components/DataTypes/ArrayComponent.js","components/DataTypes/ObjectComponent.js","components/DisplayComponent.js","components/MainComponent.js","App.js","reportWebVitals.js","index.js"],"names":["StringComponent","props","state","val","v","e","this","setState","target","value","k","type","onChange","handleChange","Component","NumberComponent","NullComponent","BooleanComponent","ArrayComponent","isHidden","isObjectHidden","t","console","log","style","paddingLeft","className","onClick","toggleObjectHidden","bind","Object","keys","map","pKey","i","pValue","toggleHidden","renderValue","ObjectComponent","obj","DisplayComponent","Array","isArray","renderElement","MainComponent","changeHandler","event","parsedObj","errMsg","processClicked","trim","msg","JSON","parse","o","rows","cols","placeholder","Validate","Process","display","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0915a957.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nclass StringComponent extends Component {\r\n    constructor(props) {\r\n        super(props);  \r\n        this.state = {\r\n            val : props.v\r\n        }  \r\n    }\r\n\r\n    handleChange(e){\r\n        this.setState({'val' : [e.target.value]})\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>&quot; {this.props.k} &quot; : \r\n            <input type = \"text\" value = {this.state.val} onChange = {(e) => this.handleChange(e)}></input> \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default StringComponent;","import React, { Component } from \"react\";\r\nclass NumberComponent extends Component {\r\n    constructor(props) {\r\n        super(props);    \r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>&quot; {this.props.k} &quot; : {this.props.v} </div>\r\n        );\r\n    }\r\n}\r\nexport default NumberComponent;","import React, { Component } from \"react\";\r\nclass NullComponent extends Component {\r\n    constructor(props) {\r\n        super(props);    \r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>&quot; {this.props.k} &quot; : null </div>\r\n        );\r\n    }\r\n}\r\nexport default NullComponent;","import React, { Component } from \"react\";\r\nclass BooleanComponent extends Component {\r\n    constructor(props) {\r\n        super(props);    \r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>&quot; {this.props.k} &quot; : {this.props.v ? 'true':'false'} </div>\r\n        );\r\n    }\r\n}\r\nexport default BooleanComponent;","import React, { Component } from \"react\";\r\nimport '../../css/datatypes.css';\r\nimport DisplayComponent from \"../DisplayComponent\";\r\nclass ArrayComponent extends Component {\r\n    constructor(props) {\r\n        super(props);   \r\n\r\n        this.state = {\r\n            isHidden: false,\r\n            isObjectHidden: false\r\n        } \r\n    }\r\n\r\n    toggleHidden () {\r\n        this.setState({\r\n            isHidden: !this.state.isHidden\r\n        })\r\n    }\r\n\r\n    toggleObjectHidden () {\r\n        this.setState({\r\n            isObjectHidden: !this.state.isObjectHidden\r\n        })\r\n    }\r\n\r\n    renderValue(val){\r\n        const t = typeof(val);\r\n        console.log(t)\r\n        if(t === 'string')\r\n            return <span style={{paddingLeft:\"30px\"}}> &quot; {val} &quot;</span>\r\n        else if(t === \"number\")\r\n            return <span style={{paddingLeft:\"30px\"}}>{val}</span>\r\n        else if(t === \"object\")\r\n            return <div style={{paddingLeft:\"30px\"}}> {\"{\"} <button className=\"togglebtn\" onClick={this.toggleObjectHidden.bind(this)}>{this.state.isObjectHidden ? '+' : '-'}</button>\r\n                        { !this.state.isObjectHidden &&\r\n                            Object.keys(val).map((pKey,i)=>{\r\n                            return (\r\n                                <li key={i}>\r\n                                <DisplayComponent\r\n                                    pKey = {pKey}\r\n                                    pValue = {val[pKey]}\r\n                                />\r\n                                </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    {\"}\"}</div>\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>&quot; {this.props.k} &quot; : [ <button className=\"togglebtn\" onClick={this.toggleHidden.bind(this)}>{this.state.isHidden ? '+' : '-'}</button>\r\n                    { !this.state.isHidden &&\r\n                    this.props.v.map((val,i)=>{\r\n                        return <span key={i} >{ (i ? ', ' : '')} <br/>{this.renderValue(val) } </span>;\r\n                    })} \r\n                ] \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ArrayComponent;","import React, { Component } from \"react\";\r\nimport '../../css/datatypes.css';\r\nimport DisplayComponent from \"../DisplayComponent\";\r\nclass ObjectComponent extends Component {\r\n    constructor(props) {\r\n        super(props);    \r\n\r\n        this.state = {\r\n            isHidden: false\r\n        } \r\n    }\r\n\r\n    toggleHidden () {\r\n        this.setState({\r\n            isHidden: !this.state.isHidden\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const obj = this.props.v\r\n        return (\r\n            <div>&quot; {this.props.k} &quot; : {\"{\"} <button className=\"togglebtn\" onClick={this.toggleHidden.bind(this)}>{this.state.isHidden ? '+' : '-'}</button>\r\n                { !this.state.isHidden &&\r\n                    Object.keys(obj).map((pKey,i)=>{\r\n                    return (\r\n                        <li key={i}>\r\n                        <DisplayComponent\r\n                            pKey = {pKey}\r\n                            pValue = {obj[pKey]}\r\n                        />\r\n                        </li>\r\n                        )\r\n                    })\r\n                }\r\n            {\"}\"}</div>\r\n        );\r\n    }\r\n}\r\nexport default ObjectComponent;","import React, { Component } from \"react\";\r\nimport StringComponent from \"./DataTypes/StringComponent\";\r\nimport NumberComponent from \"./DataTypes/NumberComponent\";\r\nimport NullComponent from \"./DataTypes/NullComponent\";\r\nimport BooleanComponent from \"./DataTypes/BooleanComponent\";\r\nimport ArrayComponent from \"./DataTypes/ArrayComponent\";\r\nimport ObjectComponent from \"./DataTypes/ObjectComponent\";\r\n\r\nclass DisplayComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            pKey : props.pKey,\r\n            pValue : props.pValue,\r\n            type : typeof(props.pValue)\r\n        };\r\n    }\r\n\r\n    renderElement(){\r\n        const t = this.state.type;\r\n        const k = this.state.pKey;\r\n        const v = this.state.pValue;\r\n        if(t === 'string')\r\n            return <StringComponent k = {k} v = {v}/>;\r\n        else if(t === 'number')\r\n            return <NumberComponent k = {k} v = {v}/>;\r\n        else if(t === 'boolean')\r\n            return <BooleanComponent k = {k} v = {v}/>;\r\n        else if(t === 'object' && v === null)\r\n            return <NullComponent k = {k} v = {v}/>;\r\n        else if(t === 'object' && Array.isArray(v))\r\n            return <ArrayComponent k = {k} v = {v}/>;\r\n        else if(t === 'object')\r\n            return <ObjectComponent k = {k} v = {v}/>;\r\n        return null;\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                {this.renderElement()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default DisplayComponent;","import React, { Component } from \"react\";\r\nimport '../css/main.css'\r\nimport DisplayComponent from \"./DisplayComponent\";\r\nclass MainComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          parsedObj: {},\r\n          value: '',\r\n          errMsg : '',\r\n          processClicked: false,\r\n          isHidden: false\r\n        };\r\n    }\r\n    \r\n    changeHandler = event => {\r\n        this.setState({ value: [event.target.value] });\r\n    };\r\n\r\n    Validate(){\r\n        if(this.state.value.trim === \"\"){\r\n            this.setState({errMsg : 'Enter value'})\r\n            this.setState({msg : ''})\r\n        }\r\n        else{\r\n            try{\r\n                var o = JSON.parse(this.state.value)\r\n                this.setState({msg : 'Valid JSON'})\r\n                this.setState({errMsg : ''})      \r\n            }\r\n            catch{\r\n                this.setState({errMsg : 'Invalid JSON'})\r\n                this.setState({msg : ''})\r\n            }\r\n        }\r\n    }\r\n\r\n    Process(){\r\n        if(this.state.value.trim === \"\"){\r\n            this.setState({errMsg : 'Enter value'})\r\n            this.setState({msg : ''})\r\n        }\r\n        else{\r\n            try{\r\n                var o = JSON.parse(this.state.value)\r\n                console.log(o)\r\n                this.setState({parsedObj : o})\r\n                this.setState({processClicked : true})\r\n                this.setState({errMsg : ''})      \r\n                this.setState({msg : 'Valid JSON'})\r\n            }\r\n            catch{\r\n                this.setState({errMsg : 'Invalid JSON'})\r\n                this.setState({msg : ''})\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleHidden(){\r\n        this.setState({\r\n            isHidden: !this.state.isHidden\r\n        })\r\n    }\r\n    render(){\r\n        const obj = this.state.parsedObj;\r\n        return (\r\n            <div className = \"main\">\r\n                <h1>JSON</h1>\r\n                <textarea\r\n                className = \"txtarea\"\r\n                rows=\"6\"\r\n                cols=\"30\"\r\n                value={this.state.value}\r\n                onChange={event => this.changeHandler(event)}\r\n                placeholder=\"{}\"\r\n                />\r\n                <br/>\r\n                {this.state.errMsg ? <p className = \"errmsg\">{this.state.errMsg}</p>:null}\r\n                {this.state.msg && !this.state.processClicked? <p className = \"msg\">{this.state.msg}</p>:null}\r\n                <br/>\r\n                <ul className=\"options\">\r\n                    <li><button className = \"button\" onClick = {()=>this.Validate()}>Validate</button></li>\r\n                    <li><button className = \"button\" onClick = {()=>this.Process()}>Process</button></li>\r\n                </ul>\r\n                <div style={{display: this.state.processClicked ? 'block' : 'none' }}>\r\n                    <h1>Formatted JSON data</h1>\r\n                    {this.state.msg ? <p className = \"msg\">{this.state.msg}</p>:null}\r\n                    <div className=\"processedView\" >\r\n                        <ul>{\"{\"} <button className=\"togglebtn\" onClick={this.toggleHidden.bind(this)}>{this.state.isHidden ? '+' : '-'}</button>\r\n                            { !this.state.isHidden &&\r\n                                Object.keys(obj).map((pKey,i)=>{\r\n                                    return (\r\n                                        <li key={i}>\r\n                                            <DisplayComponent\r\n                                                pKey = {pKey}\r\n                                                pValue = {obj[pKey]}\r\n                                            />\r\n                                        </li>\r\n                                    )\r\n                                })\r\n                            }\r\n                        {\"}\"}</ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainComponent;","import './App.css';\nimport MainComponent from './components/MainComponent.js';\n\nfunction App() {\n  return (\n    <MainComponent/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}